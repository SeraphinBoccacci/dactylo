{"version":3,"file":"static/webpack/static/development/pages/dactylo.js.7abb4704b3a780992064.hot-update.js","sources":["webpack:///./components/statistics/index.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { StatisticsContainer, StatisticsItem } from \"./style\";\n\nexport default class Index extends React.Component<\n  {\n    okWords: number;\n    wrongWords: number;\n    okLetters: number;\n    wrongLetters: number;\n  },\n  {\n    startTime?: Date;\n  }\n> {\n  constructor(props: {\n    okWords: number;\n    wrongWords: number;\n    okLetters: number;\n    wrongLetters: number;\n  }) {\n    super(props);\n\n    this.state = {};\n  }\n  componentDidUpdate() {\n    const { startTime } = this.state;\n\n    if (!startTime) this.setState({ startTime: new Date() });\n  }\n  render() {\n    const { okWords, wrongWords, okLetters, wrongLetters } = this.props;\n    const { startTime } = this.state;\n    const totalLetters =\n      okLetters + wrongLetters === 0 ? 1 : okLetters + wrongLetters;\n    const accuracy = Math.floor((okLetters / totalLetters) * 10000) / 100;\n    const spentTime = startTime && new Date().getTime() - startTime.getTime();\n    const spentTimeInMinute = spentTime && spentTime / 60000;\n    const wordsPerMinute =\n      spentTimeInMinute &&\n      (okWords || wrongWords) &&\n      (okWords + wrongWords) / spentTimeInMinute;\n\n    return (\n      <StatisticsContainer title=\"Your Stats\" bordered size={\"small\"} colu>\n        <StatisticsItem label=\"Mots justes\">{okWords}</StatisticsItem>\n        <StatisticsItem label=\"Mots faux\">{wrongWords}</StatisticsItem>\n        <StatisticsItem label=\"PrÃ©cision\">{accuracy}</StatisticsItem>\n        <StatisticsItem label=\"Mots par minutes\">\n          {Math.floor((wordsPerMinute || 0) * 100) / 100}\n        </StatisticsItem>\n      </StatisticsContainer>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;;;;;AAWA;AAKA;AACA;AADA;AACA;AAAA;AAEA;AAHA;AAIA;AACA;;;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAjDA;AACA;;;;;A","sourceRoot":""}